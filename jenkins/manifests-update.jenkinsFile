pipeline {
    options {
        timeout(time: 1, unit: 'HOURS')
        buildDiscarder(logRotator(daysToKeepStr: '7'))
    }
    agent none
    triggers {
        cron('H 0 * * *')
    }
    stages {
        stage('Update Manifests') {
            agent {
                docker {
                    label 'Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host'
                    image 'opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v2'
                    args '-e JAVA_HOME=/opt/java/openjdk-11'
                    registryUrl 'https://public.ecr.aws/'
                    alwaysPull true
                }
            }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'jenkins-github-bot-token', passwordVariable: 'GITHUB_TOKEN', usernameVariable: 'GITHUB_USER')]) {
                        sh """
                        git remote set-url origin https://opensearch-ci:${GITHUB_TOKEN}@github.com/opensearch-project/opensearch-build
                        git config user.email "opensearch-infra@amazon.com"
                        git config user.name "opensearch-ci"
                        git checkout -b update-manifest-${BUILD_NUMBER}
                        """
                    }
                        // sh './manifests.sh update'
                        // sh 'touch file'
                        try {
                            def status = sh(returnStdout: true, script: 'git add . && git commit -sm "Update manifests"')
                            println "hello status, ${status}"
                            if (status) {
                            // sh """
                            //         git push origin update-manifest-${BUILD_NUMBER}
                            //         gh pr create --title '[AUTO] Update input manifests' --body 'I have noticed that a repo has incremented a version. This change updates the corresponding input manifests.' -H update-manifest-${BUILD_NUMBER}
                            //     """
                            println "hello status, ${status}"
                            } else {
                                echo "No new version bumps! Nothing to commit"
                            }
                        } catch (e) {
                            error "Exception occurred while commiting" + e.toString()
                        }
                    
                }
            }
            post() {
                always {
                    cleanWs disableDeferredWipeout: true, deleteDirs: true
                }
            }
        }
    }
}
