/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

lib = library(identifier: 'jenkins@release-owner', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/gaiksaya/opensearch-build-libraries.git',
]))

pipeline {
    options {
            timeout(time: 1, unit: 'HOURS')
    }
    agent {
        docker {
            label 'Jenkins-Agent-AL2023-X64-M54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-al2-opensearch-build-v1'
            registryUrl 'https://public.ecr.aws/'
            alwaysPull true
        }
    }
    parameters {
        string(
            name: 'RELEASE_VERSION',
            description: "Required: On-going release version, e.g. 2.0.0",
            trim: true
        )
        string(
            name: 'RELEASE_CHORE',
            description: "Required: What release chore you wanna do? e.g: 'add_rc_details_comment, check_release_issues, release_owner_chores'",
            trim: true
        )
    }
    stages {
        stage('Parameter check') {
            steps {
                script {
                    if (!(params.RELEASE_VERSION && params.RELEASE_CHORE)) {
                        error('Required parameters are missing. Please provide the mandatory arguments RELEASE_VERSION and RELEASE_CHORE')
                    }
                }
            }
        }
        stage('Add RC details and Docker Scan comment') {
            when {
                expression { params.RELEASE_CHORE == 'add_rc_details_comment' }
            }
            steps {
                script {
                    addRcDetailsComment(
                        version: "${params.RELEASE_VERSION}"
                        )
                }
            }
        }
        stage('Check release issues') {
            when {
                expression { params.RELEASE_CHORE == 'check_release_issues' }
            }
            steps {
                script {
                    checkReleaseIssue(
                        inputManifest: [ "manifests/${params.RELEASE_VERSION}/opensearch-${params.RELEASE_VERSION}.yml",
                        "manifests/${params.RELEASE_VERSION}/opensearch-dashboards-${params.RELEASE_VERSION}.yml" ],
                        action: 'create'
                    )
                }
            }
        }
        stage('Release Owners') {
            when {
                expression { params.RELEASE_CHORE == 'release_owner_chores' }
            }
            steps {
                script {
                    checkNotifyAndAssignReleaseOwners(
                        inputManifest: [ "manifests/${params.RELEASE_VERSION}/opensearch-${params.RELEASE_VERSION}.yml",
                        "manifests/${params.RELEASE_VERSION}/opensearch-dashboards-${params.RELEASE_VERSION}.yml" ],
                        action: 'request'
                    )
                }
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}
