/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 */

lib = library(identifier: 'jenkins@testMavenEcho', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/gaiksaya/opensearch-build-libraries.git',
]))

pipeline {
    agent {
        docker {
            label 'Jenkins-Agent-AL2023-X64-M54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v3'
            args '-e JAVA_HOME=/opt/java/openjdk-11'
            registryUrl 'https://public.ecr.aws/'
            alwaysPull true
        }
    }
    parameters {
        string(
            name: 'BUILD_ID',
            description: 'Build ID of the OpenSearch distribution artifacts to be staged and released',
            trim: true
        )
        string(
            name: 'VERSION',
            description: 'Version of the OpenSearch distribution artifacts to be staged and released',
            trim: true
        )
    }
    environment {
        ARTIFACT_PATH = "distribution-build-opensearch/${VERSION}/${BUILD_ID}/linux/x64/tar/builds"
        ARTIFACT_BUCKET_NAME = credentials('jenkins-artifact-bucket-name')
        STAGING_PROFILE_ID = "${SONATYPE_STAGING_PROFILE_ID}"
        BUILD_ID = "${BUILD_ID}"
    }
    stages {
        stage('sign-stage-and-release') {
            steps {
                script {
                    // echo "Downloading from S3."
                    // downloadFromS3(
                    //     localPath: "$WORKSPACE/artifacts",
                    //     bucketName: "${ARTIFACT_BUCKET_NAME}",
                    //     downloadPath: "${ARTIFACT_PATH}/",
                    //     roleAccountNumberCred: 'jenkins-aws-account-public',
                    //     assumedRoleName: 'opensearch-bundle',
                    //     force: true
                    // )
                    sh("mkdir -p $WORKSPACE/artifacts/opensearch/maven/org/opensearch/opensearch/3.2.0")
                    publishToMaven(
                        signingArtifactsPath: "$WORKSPACE/artifacts/$ARTIFACT_PATH/opensearch/manifest.yml",
                        mavenArtifactsPath: "$WORKSPACE/artifacts/$ARTIFACT_PATH/opensearch/maven",
                        autoPublish: true,
                        email: "${email}"
                    )
                }
            }
        }
    }
    post() {
        always {
            script {
                postCleanup()
            }
        }
    }
}
